{"version":3,"sources":["getDataApi.js","store/actions.js","store/index.js","components/RestaurantCard/RestaurantCard.js","components/RestaurantsListPage/RestaurantsListPage.js","store/selectors.js","components/RestaurantsListPage/index.js","App.js","index.js"],"names":["getDataFromServer","url","fetch","then","response","json","ACTION_TYPES","saveRestaurants","data","type","payload","initialState","restaurantsListData","store","createStore","state","arguments","length","undefined","action","Object","objectSpread2","applyMiddleware","thunk","RestaurantCard","_ref","imageUrl","title","categories","etaRange","react_default","a","createElement","className","src","alt","join","defaultProps","RestaurantsListPage","restaurantsData","loadRestaurants","useEffect","map","restaurant","uuid","heroImageUrl","RestaurantCard_RestaurantCard_RestaurantCard","key","text","selectRestaurantsList","createSelector","feedItems","storesMap","_ref2","Enhanced","connect","dispatch","regenerator_default","async","_context","prev","next","awrap","sent","stop","App","es","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.efa3ad03.chunk.js","sourcesContent":["const getDataFromServer = url => (\n  fetch(url).then(response => response.json())\n);\n\nexport default getDataFromServer;\n","import getDataFromServer from '../getDataApi';\n\nexport const ACTION_TYPES = {\n  SAVE_RESTAURANTS: 'SAVE_RESTAURANTS',\n};\n\nconst saveRestaurants = data => ({\n  type: ACTION_TYPES.SAVE_RESTAURANTS,\n  payload: data,\n});\n\nconst restaurantsURL\n  = 'https://mate-uber-eats-api.herokuapp.com/api/v1/restaurants';\n\nexport const loadRestaurants = () => async(dispatch) => {\n  const { data } = await getDataFromServer(restaurantsURL);\n\n  dispatch(saveRestaurants(data));\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ACTION_TYPES } from './actions';\n\nconst initialState = {\n  restaurantsListData: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.SAVE_RESTAURANTS:\n      return {\n        ...state,\n        restaurantsListData: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './RestaurantCard.scss';\n\nexport const RestaurantCard = ({ imageUrl, title, categories, etaRange }) => (\n  <div className=\"restaurant-card\">\n    <img src={imageUrl} alt={title} className=\"restaurant-card__img\" />\n    <h2 className=\"restaurant-card__title\">{title}</h2>\n    <div className=\"restaurant-card__categories\">\n      {categories.join(' â€¢ ')}\n    </div>\n    <div className=\"restaurant-card__eta\">\n      {etaRange}\n    </div>\n  </div>\n);\n\nRestaurantCard.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  categories: PropTypes.arrayOf(PropTypes.string),\n  etaRange: PropTypes.string,\n};\n\nRestaurantCard.defaultProps = {\n  categories: [],\n  etaRange: '',\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { RestaurantCard } from '../RestaurantCard';\nimport './RestaurantsListPage.scss';\n\nconst DEFAULT_ETA_RANGE = '20 - 30 min';\n\nexport const RestaurantsListPage = ({ restaurantsData, loadRestaurants }) => {\n  useEffect(() => {\n    loadRestaurants();\n  }, []);\n\n  return (\n    <div className=\"restaurants-list\">\n      {restaurantsData.map((restaurant) => {\n        const {\n          uuid,\n          title,\n          heroImageUrl,\n          categories,\n          etaRange,\n        } = restaurant;\n\n        return (\n          <RestaurantCard\n            key={uuid}\n            uuid={uuid}\n            imageUrl={heroImageUrl}\n            title={title}\n            categories={categories}\n            etaRange={etaRange ? etaRange.text : DEFAULT_ETA_RANGE}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nRestaurantsListPage.propTypes = {\n  restaurantsData: PropTypes.arrayOf(PropTypes.shape({\n    uuid: PropTypes.string,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string,\n    categories: PropTypes.arrayOf(PropTypes.string),\n    etaRange: PropTypes.string,\n  })),\n  loadRestaurants: PropTypes.func.isRequired,\n};\n\nRestaurantsListPage.defaultProps = {\n  restaurantsData: [],\n};\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectRestaurantsList = createSelector(\n  rootSelector,\n  ({ restaurantsListData }) => {\n    if (!restaurantsListData) {\n      return [];\n    }\n\n    const { feedItems, storesMap } = restaurantsListData;\n\n    return feedItems.map(({ uuid }) => (storesMap[uuid]));\n  }\n);\n","import { connect } from 'react-redux';\nimport { loadRestaurants } from '../../store/actions';\nimport { RestaurantsListPage } from './RestaurantsListPage';\nimport { selectRestaurantsList } from '../../store/selectors';\n\nconst mapStateToProps = state => ({\n  restaurantsData: selectRestaurantsList(state),\n});\n\nconst Enhanced\n  = connect(mapStateToProps, { loadRestaurants })(RestaurantsListPage);\n\nexport { Enhanced as RestaurantsListPage };\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { RestaurantsListPage } from './components/RestaurantsListPage';\nimport './styles/index.scss';\n\nconst App = () => (\n  <Provider store={store}>\n    <div className=\"page\">\n      <header>Future header</header>\n      <main className=\"content\">\n        <RestaurantsListPage />\n      </main>\n      <footer>Future footer</footer>\n    </div>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}